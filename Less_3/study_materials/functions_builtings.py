
# abs() Возвращает абсолютное значение числа (целого или с плавающей точкой)
# all() Возвращает True, если все элементы итерируемого объекта — истинные
# any() Возвращает True, если какой-либо элемент итерируемого объекта равен True
# ascii() Возвращает строку, содержащую печатаемое представление объекта
# bin() Преобразует целое число в двоичную строку с префиксом 0b
# bool() Возвращает логическое значение (True или False)
# breakpoint() Перемещает в отладчик
# bytearray() Возвращает массив байтов
# bytes() Возвращает объект bytes, представляющий собой неизменяемый набор целых чисел в диапазоне от 0 до 256
# callable() Возвращает True, если аргумент функции поддерживает возможность вызова
# chr() Возвращает символ, соответствующий коду Unicode (целому числу)
# classmethod() Преобразует функцию в метод класса, а не только его экземпляра
# compile() Компилирует исходный код в объект кода, либо в объект абстрактного синтаксического дерева
# complex() Помогает преобразовать в комплексное число
# delattr() Удалить из объекта указанный атрибут
# dict() Вызов конструктора, создающего словарь
# dir() Возвращает список имён, определённых в модуле
# divmod() Возвращает частное-остаток от деления чисел
# enumerate() Возвращает генератор пар счётчик-элемент для элементов указанного набора
# eval() Выполняет разбор и запуск указанного выражения
# exec() Выполняет переданный в функцию код
# filter() Выполняет фильтрацию элементов объекта
# float() Преобразует объект к числу с плавающей точкой
# format() Форматирование переданного объекта
# frozenset() Создание неизменяемого множества
# getattr() Получить значение атрибута объекта
# globals() Получить словарь с глобальной таблицей символов модуля
# hasattr() Возвращает True, если объект содержит указанный атрибут
# hash() Получить хеш объекта
# help() Вызов встроенной справки
# hex() Возвращает целое число в виде строки в шестнадцатеричном формате
# id() Получить идентификатор объекта
# input() Запросить строковый пользовательский ввод
# int() Преобразовать объект в целочисленный формат
# isinstance() Возвращает True, если переданный объект является экземпляром указанного класса
# issubclass() Возвращает True, если указанный класс является подклассом другого класса
# iter() Получить объект итератора
# len() Получить количество элементов в объекте
# list() Создание объекта-списка
# locals() Получить текущую локальную таблицу символов в виде словаря
# map() Применить указанную функцию к каждому элементу коллекции
# max() Возвращает элемент с максимальным значением из набора
# memoryview() Возвращает объект — представление в памяти для переданного аргумента
# min() Возвращает элемент с наименьшим значением из набора
# next() Получить очередной элемент итератора
# object() Создать новый базовый класс
# oct() Возвращает заданное целое число в восьмеричном формате в виде строки
# open() Открыть файл и вернуть его объект
# ord() Вернуть числовой код символа
# pow() Возвести число в степень
# print() Отправить указанный объект текстовым потоком
# property() Вернуть свойство
# range() Определить диапазон с шагом (при необходимости)
# repr() Получить для переданного объекта формальное строковое представление
# reversed() Получить обратный итератор для переданного набора значений
# round() Получить число с плавающей точкой. Округлённое до нужного числа знаков после запятой
# set() Создать изменяемое множество
# setattr() Связать с объектом указанный атрибут
# slice() Выполнить срез в последовательности
# sorted() Вернуть список, состоящий из элементов объекта, поддерживающего итерирование
# staticmethod() Определить указанную функцию в качестве статичного метода
# str() Преобразовать объект к строковому типу
# sum() Выполнить суммирование элементов объекта и вернуть результат
# super() Вернуть объект-посредник, перенаправляющий вызовы методов родителю
# tuple() Создать кортеж
# type() Определить тип объекта
# vars() Получить словарь из атрибута __dict__ объекта
# zip() Вернуть итератор для кортежей, где каждый i-й кортеж содержит i-й элемент каждой из коллекций
